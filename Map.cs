using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GLShooter.Geometry;

namespace GLShooter
{
    public static class Map
    {
        public static int[][] mapObjects = new int[][]
        {
            new int[] {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            new int[] {1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,1},
            new int[] {1,0,0,0,0,0,2,2,2,2,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,2,2,0,2,2,0,0,0,0,2,0,2,2,2,2,2,2,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,2,2,2,2,2,2,1},
            new int[] {1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1},
            new int[] {1,2,0,2,2,2,2,2,2,2,2,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,2,0,0,0,0,5,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,2,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,2,0,2,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,2,2,2,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1},
            new int[] {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        };

        public static bool InBounds(Vector cords)
        {
            var lengthX = mapObjects.GetLength(0);
            var lengthY = mapObjects[0].GetLength(0);
            return (cords.X > 0 && cords.Y > 0
                && cords.X < lengthX && cords.Y < lengthY);
        }
    }
}
